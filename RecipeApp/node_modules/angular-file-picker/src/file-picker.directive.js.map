{"version":3,"sources":["../../src/file-picker.directive.ts"],"names":[],"mappings":"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","file":"file-picker.directive.js","sourceRoot":"","sourcesContent":["import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  HostListener,\r\n  OnInit,\r\n  Output,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\nimport { PickedFile } from './picked-file';\r\nimport { PickedFileImpl } from './picked-file-impl';\r\n\r\n\r\nexport class FilePickerDirective implements OnInit {\r\n  \r\n  public accept = '';\r\n\r\n  \r\n  get multiple() { return this._multiple; }\r\n  set multiple(value: any) { this._multiple = coerceBooleanProperty(value); }\r\n\r\n  \r\n  public filePick = new EventEmitter<PickedFile>();\r\n\r\n  private _multiple: boolean;\r\n  private input: any;\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) {\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.input = this.renderer.createElement('input');\r\n    this.renderer.appendChild(this.el.nativeElement, this.input);\r\n\r\n    this.renderer.setAttribute(this.input, 'type', 'file');\r\n    this.renderer.setAttribute(this.input, 'accept', this.accept);\r\n    this.renderer.setStyle(this.input, 'display', 'none');\r\n\r\n    if (this.multiple) {\r\n      this.renderer.setAttribute(this.input, 'multiple', 'multiple');\r\n    }\r\n\r\n    this.renderer.listen(this.input, 'change', (event: any) => {\r\n      for (let file of event.target.files) {\r\n        this.readFile(file);\r\n      }\r\n    });\r\n  }\r\n\r\n  public reset() {\r\n    if (!this.input) {\r\n      console.error('It seems that ngOnInit() has not been executed or that the hidden input element is null. Did you mess with the DOM?');\r\n      return;\r\n    }\r\n\r\n    this.input.value = null;\r\n  }\r\n\r\n  \r\n  private browse() {\r\n    if (!this.input) {\r\n      console.error('It seems that ngOnInit() has not been executed or that the hidden input element is null. Did you mess with the DOM?');\r\n      return;\r\n    }\r\n\r\n    this.input.click();\r\n  }\r\n\r\n  private readFile(file: File) {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (loaded: ProgressEvent) => {\r\n      const fileReader = loaded.target as FileReader;\r\n      const pickedFile = new PickedFileImpl(file.lastModifiedDate, file.name, file.size, file.type, fileReader.result);\r\n\r\n      this.filePick.emit(pickedFile);\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[ngFilePicker]'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'accept': [{ type: Input },],\n'multiple': [{ type: Input },],\n'filePick': [{ type: Output },],\n'browse': [{ type: HostListener, args: ['click', ] },],\n};\n}\r\n\r\nfunction coerceBooleanProperty(value: any): boolean {\r\n  return value != null && `${value}` !== 'false';\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}